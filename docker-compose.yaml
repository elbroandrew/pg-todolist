version: '3.8'

services:
  gateway:
    build:
      context: .
      dockerfile: cmd/gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GATEWAY_PORT=${GATEWAY_PORT}
      - TASK_SERVICE_URL=${TASK_SERVICE_URL}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_ADDR=${REDIS_ADDR}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - todolist-network
    depends_on:
      migrator:
        condition: service_completed_successfully
      task_service:
        condition: service_healthy
  task_service:
    build:
      context: .
      dockerfile: cmd/task_service/Dockerfile
    ports:
      - "8081:8081"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - TASK_SERVICE_PORT=${TASK_SERVICE_PORT}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - todolist-network
    depends_on:
      migrator:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
  migrator:
    build:
      context: .
      dockerfile: cmd/migrator/Dockerfile
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - todolist-network
    depends_on:
      mysql:
        condition: service_healthy
  mysql:
    image: mysql:latest
    healthcheck:
      # проверка на готовность БД, чтобы мигратор мог выполниться после него. Использую 'SELECT 1;'.
      test: ["CMD", "mysql", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}", "-e", "SELECT 1;", "${MYSQL_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 20s  # даю контейнеру 20 сек на разогрев перед первой проверкой
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/app/migrations
    restart: unless-stopped
    networks:
      - todolist-network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - todolist-network

volumes:
  mysql_data:
  redis_data:

networks:
  todolist-network:
    driver: bridge